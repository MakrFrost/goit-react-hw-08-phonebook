{"version":3,"file":"static/js/480.b2d31117.chunk.js","mappings":"sRAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASE,SAAnB,EAUjBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACN,EAPyB,SAAAC,GAAK,OAAIA,EAAMM,OAAOA,MAAjB,IAQ/B,SAACL,EAAUK,GACT,IAPwBC,EAOlBC,EAAkBP,EAASK,QAAO,qBAAGG,KACpCC,cAAcC,SAASL,EAAOI,cADG,IAIxC,OAXwBH,EAWJC,GAVf,OAAID,EAAIK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEJ,KAAKM,cAAcD,EAAEL,KAAjC,IAWnB,I,UCrBH,GAAgB,KAAO,0BAA0B,YAAc,iCAAiC,YAAc,iCAAiC,WAAa,gCAAgC,cAAgB,mCAAmC,YAAc,kC,SCQ9O,SAASO,IACtB,IAAMf,GAAWgB,EAAAA,EAAAA,IAAYlB,GACvBmB,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAIC,iBAEEC,EAASF,EAAIG,cAAcC,SAASF,OAAOG,MAC3CjB,EAAOY,EAAIG,cAAcC,SAAShB,KAAKiB,QAEvCC,EAAO1B,EAAS2B,MACpB,SAAAC,GAAO,OAAIA,EAAQpB,KAAKC,gBAAkBD,EAAKC,aAAxC,KAPU,uBAUjBoB,EAAAA,GAAAA,KAAA,aAAiBH,EAAKlB,KAAtB,4BAViB,6BAadA,IAAQc,EAbM,wBAcjBO,EAAAA,GAAAA,KAAW,wBAdM,+BAiBfrB,GAASc,EAjBM,wBAkBjBO,EAAAA,GAAAA,KAAW,0BAlBM,2BAqBN,KAATrB,GAA0B,KAAXc,GACjBO,EAAAA,GAAAA,KAAW,kCAETrB,GAAQc,IACVL,GAASa,EAAAA,EAAAA,IAAW,CAAEtB,KAAMA,EAAMc,OAAQA,KAC1CO,EAAAA,GAAAA,QAAA,uCAA8CrB,EAA9C,wBAEFY,EAAIG,cAAcQ,QA5BC,4CAAH,sDA+BlB,OACE,kBAAMC,SAAUb,EAAcc,UAAWC,EAAAA,KAAzC,WACE,mBAAOD,UAAWC,EAAAA,YAAlB,kBAEE,kBACED,UAAWC,EAAAA,YACXC,YAAY,aACZC,KAAK,OACL5B,KAAK,OACL6B,QAAQ,yHACRC,MAAM,4IAER,SAAC,MAAD,CAAkBL,UAAWC,EAAAA,iBAE/B,mBAAOD,UAAWC,EAAAA,cAAlB,oBAEE,kBACED,UAAWC,EAAAA,cACXC,YAAY,cACZC,KAAK,MACL5B,KAAK,SACL6B,QAAQ,yFACRC,MAAM,kGAER,SAAC,MAAD,CAAqBL,UAAWC,EAAAA,iBAElC,mBAAQE,KAAK,SAASH,UAAWC,EAAAA,YAAjC,4BAKL,C,cC1ED,EAAgC,8BAAhC,EAA6E,6BCM9D,SAASK,IACtB,IAAMtB,GAAWC,EAAAA,EAAAA,MACXlB,GAAWgB,EAAAA,EAAAA,IAAYb,GAO7B,OACE,iCACE,mBAAO8B,UAAWC,EAAlB,wCAEE,kBACEE,KAAK,OACL5B,KAAK,SACL2B,YAAY,kBACZK,SAbR,SAAsBC,GACpB,IAAMC,EAAaD,EAAEE,OAAOlB,MAC5BR,GAAS2B,EAAAA,EAAAA,GAAUF,GACpB,KAYK,SAAC,MAAD,CAAUT,UAAWC,QAGrB,8DACmC,uBAAIlC,EAAS6C,cAKvD,CClCD,MAAuB,0BCMR,SAASC,EAAT,GAA4C,IAArBtC,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,OAAQyB,EAAM,EAANA,GAC5C9B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,gBAAI6B,GAAIA,EAAId,UAAWC,EAAvB,WACE,uBAAI1B,KACJ,uBAAIc,KACJ,cAAG0B,KAAI,cAAS1B,GAAhB,UACE,SAAC,MAAD,OAEF,mBAAQc,KAAK,SAASa,QAZL,WACnBhC,GAASiC,EAAAA,EAAAA,IAAcH,IACvBlB,EAAAA,GAAAA,MAAA,uBAA4BrB,EAA5B,yBACD,EASG,UACE,SAAC,MAAD,QAIP,CC1BD,MAAqC,wCAArC,EAA6F,mC,UCM9E,SAAS2C,IACtB,IAAMnD,GAAWgB,EAAAA,EAAAA,IAAYb,GACvBiD,GAAUpC,EAAAA,EAAAA,IAAYd,GAE5B,OACE,iBAAK+B,UAAWC,EAAhB,UACuB,IAApBlC,EAAS6C,SAAgB,2DACzBO,GACC,SAACC,EAAA,EAAD,KAEA,eAAIpB,UAAWC,EAAf,SACGlC,GACCA,EAASsD,KAAI,gBAAGP,EAAH,EAAGA,GAAIvC,EAAP,EAAOA,KAAMc,EAAb,EAAaA,OAAb,OACX,SAACwB,EAAD,CAAsBC,GAAIA,EAAIvC,KAAMA,EAAMc,OAAQA,GAAhCyB,EADP,QAOxB,CClBc,SAASQ,IACtB,IAAMtC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAsC,EAAAA,EAAAA,YAAU,WACRvC,GAASwC,EAAAA,EAAAA,MACV,GAAE,CAACxC,KAGF,iCACE,SAACF,EAAD,KACA,SAACwB,EAAD,KACA,SAACY,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const isLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const sortContacts = arr => {\n  return [...arr.sort((a, b) => a.name.localeCompare(b.name))];\n};\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const visibleContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return sortContacts(visibleContacts);\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label__name\":\"ContactForm_label__name__VZfQ+\",\"input__name\":\"ContactForm_input__name__qXzWu\",\"name__icon\":\"ContactForm_name__icon__T+GCu\",\"label__number\":\"ContactForm_label__number__ZarZ+\",\"form_button\":\"ContactForm_form_button__3kup0\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { BsFillPersonFill, BsTelephonePlusFill } from 'react-icons/bs';\n\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = async evt => {\n    evt.preventDefault();\n\n    const number = evt.currentTarget.elements.number.value;\n    const name = evt.currentTarget.elements.name.value;\n\n    const copy = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (copy) {\n      toast.info(`A \"${copy.name}\" already in  contacts!`);\n      return;\n    }\n    if (!name && number) {\n      toast.info('Please, enter a Name');\n      return;\n    }\n    if (name && !number) {\n      toast.info('Please, enter a Number');\n      return;\n    }\n    if (name === '' && number === '') {\n      toast.info('Please, enter Name and Number!');\n    }\n    if (name && number) {\n      dispatch(addContact({ name: name, number: number }));\n      toast.success(`You have successfully added \"${name}\" to you contacts!`);\n    }\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={onFormSubmit} className={css.form}>\n      <label className={css.label__name}>\n        Name\n        <input\n          className={css.input__name}\n          placeholder=\"JUGGERNAUT\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        <BsFillPersonFill className={css.name__icon} />\n      </label>\n      <label className={css.label__number}>\n        Number\n        <input\n          className={css.input__number}\n          placeholder=\"+7209282291\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n        <BsTelephonePlusFill className={css.name__icon} />\n      </label>\n      <button type=\"submit\" className={css.form_button}>\n        Add contact!\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__label\":\"Filter_filter__label__ttfPR\",\"filter__icon\":\"Filter_filter__icon__l9JOX\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { BsFilter } from 'react-icons/bs';\n\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  function changeFilter(e) {\n    const inputValue = e.target.value;\n    dispatch(setFilter(inputValue));\n  }\n\n  return (\n    <>\n      <label className={css.filter__label}>\n        Find you contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name here\"\n          onChange={changeFilter}\n        />\n        <BsFilter className={css.filter__icon} />\n      </label>\n      {\n        <p>\n          Total contacts in you phonebook: <b>{contacts.length}</b>\n        </p>\n      }\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\"};","import { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { BsFillTrashFill, BsFillTelephoneFill } from 'react-icons/bs';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactItem.module.css';\n\nexport default function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.error(`You removed \"${name}\" from your contacts!`);\n  };\n\n  return (\n    <li id={id} className={css.item}>\n      <b>{name}</b>\n      <i>{number}</i>\n      <a href={`tel:${number}`}>\n        <BsFillTelephoneFill />\n      </a>\n      <button type=\"button\" onClick={handleDelete}>\n        <BsFillTrashFill />\n      </button>\n    </li>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__container\":\"ContactList_contact__container__5Kczs\",\"contact__list\":\"ContactList_contact__list__2jNwc\"};","import { useSelector } from 'react-redux';\n\nimport ContactItem from '../ContactItem/ContactItem';\nimport { selectVisibleContacts, isLoading } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport Loader from 'components/Loader/Loader';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n  const Loading = useSelector(isLoading);\n\n  return (\n    <div className={css.contact__container}>\n      {contacts.length === 0 && <p>Sorry, You don't have contacts.</p>}\n      {Loading ? (\n        <Loader />\n      ) : (\n        <ul className={css.contact__list}>\n          {contacts &&\n            contacts.map(({ id, name, number }) => (\n              <ContactItem key={id} id={id} name={name} number={number} />\n            ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","isLoading","selectVisibleContacts","createSelector","filter","arr","visibleContacts","name","toLowerCase","includes","sort","a","b","localeCompare","ContactForm","useSelector","dispatch","useDispatch","onFormSubmit","evt","preventDefault","number","currentTarget","elements","value","copy","find","contact","toast","addContact","reset","onSubmit","className","css","placeholder","type","pattern","title","Filter","onChange","e","inputValue","target","setFilter","length","ContactItem","id","href","onClick","deleteContact","ContactList","Loading","Loader","map","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}