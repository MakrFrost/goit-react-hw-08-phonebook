{"version":3,"file":"static/js/988.0dfdcc1a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const isLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\n//!\nexport const sortContacts = arr => {\n  return [...arr.sort((a, b) => a.name.localeCompare(b.name))];\n};\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const visibleContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return sortContacts(visibleContacts);\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label__name\":\"ContactForm_label__name__VZfQ+\",\"label__number\":\"ContactForm_label__number__ZarZ+\",\"form_button\":\"ContactForm_form_button__3kup0\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = async evt => {\n    evt.preventDefault();\n\n    const number = evt.currentTarget.elements.number.value;\n    const name = evt.currentTarget.elements.name.value;\n\n    const copy = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (copy) {\n      toast.info(`A \"${copy.name}\" already in  contacts!`);\n      return;\n    }\n    if (!name && number) {\n      toast.info('Please, enter a Name');\n      return;\n    }\n    if (name && !number) {\n      toast.info('Please, enter a Number');\n      return;\n    }\n    if (name === '' && number === '') {\n      toast.info('Please, enter Name and Number!');\n    }\n    if (name && number) {\n      dispatch(addContact({ name: name, number: number }));\n      toast.success(`You have successfully added \"${name}\" to you contacts!`);\n    }\n  };\n\n  return (\n    <form onSubmit={onFormSubmit} className={css.form}>\n      <label className={css.label__name}>\n        Name\n        <input\n          className={css.input__name}\n          placeholder=\"JUGGERNAUT\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </label>\n      <label className={css.label__number}>\n        Number\n        <input\n          className={css.input__number}\n          placeholder=\"+7209282291\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </label>\n      <button type=\"submit\" className={css.form_button}>\n        Add contact!\n      </button>\n    </form>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  function changeFilter(e) {\n    const inputValue = e.target.value;\n    dispatch(setFilter(inputValue));\n  }\n\n  return (\n    <label htmlFor=\"filter\">\n      Find you contacts by name:\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name here\"\n        onChange={changeFilter}\n      />\n    </label>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nexport default function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li>\n      {name} : {number} <br />\n      <button type=\"button\" id={id} onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectVisibleContacts);\n  const totalContacts = contacts.length;\n\n  return (\n    <ul>\n      {contacts.map(({ number, name, id }) => (\n        <ContactItem key={id} number={number} name={name} id={id} />\n      ))}\n      <p>Total contacts in you phonebook: {totalContacts}</p>\n    </ul>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { isLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const Loading = useSelector(isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <div>{Loading && <Loader />}</div>\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","isLoading","selectVisibleContacts","createSelector","filter","arr","visibleContacts","name","toLowerCase","includes","sort","a","b","localeCompare","ContactForm","useSelector","dispatch","useDispatch","onFormSubmit","evt","preventDefault","number","currentTarget","elements","value","copy","find","contact","toast","addContact","onSubmit","className","css","placeholder","type","pattern","title","Filter","htmlFor","onChange","e","inputValue","target","setFilter","ContactItem","id","onClick","deleteContact","ContactList","totalContacts","length","map","ContactsPage","Loading","useEffect","fetchContacts","Loader"],"sourceRoot":""}